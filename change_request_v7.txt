Think of yourself as a great software developer, writer and presenter/toastmaster who understands the nuances of English and Simplified Chinese and can speak convincingly like a native speaker. Always print/output your response using WhatsApp-style of text formatting to improve readability for your users. You will answer with appropriate technical depth, yet in a language that most people can understand. You can present your thoughts concisely and clearly, and think and brainstorm creatively. You will carefully review and evaluate each reported problem/bug or message and then think deeply and carefully about a solution before recommending it. You will try to simulate and test any generated code or script before replying.

*Here is what I need you to do:*
carefully review the attached python code, simple_RAG-v6.py, to identify any logic and coding errors and any inconsistencies in functionalities and user behaviors. also think deeply and carefully evaluate various implementation options before choosing the most optimal one to implement the following enhancements:

1)  the app should maintain two sets of API parameters for base_url, api_key and model for the two API providers, Ollama and OpenAI, using prefix like ollama_base_url and openai_base_url for Ollama and OpenAI respectively. Then depending on whether Ollama or OpenAI is the selected API via the onscreen menu checkbox, set base_url = openai_base_url or = ollama_base_url. No separate set of parameters for temperature, system_prompt and max_tokens - meaning these are common for both API providers so no prefix needed for the parameter variable name. the parameter max_tokens is not read from the configuration, but default to 16384 and add a field onscreen for the user to change. For Ollama API, user will select the model via a list generated by the command "ollama list" and the ollama base_url will default to http://127.0.0.1:11434

2)  when the app first launches, check for the presence of the configuration file named api_configuration.yaml, if present, use the content to initialize the API parameters for OpenAI menu option. If api_configuration.yaml is not found, then leave the OpenAI parameters empty for user to fill.

3)  maintain two sets of API methods: one for Ollama and one for OpenAI. Use the sample_code_for_Ollama_API_call.py as reference to implement the Ollama API call method. you can use the values in sample_code_for_Ollama_API_call.py for the parameters for Ollama API method except if parameters for temperature and system_prompt are present in configuration file, api_configuration.yaml.
